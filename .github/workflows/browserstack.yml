name: 'BrowserStack Test'
on: [push, pull_request]
jobs:
  ubuntu-job:
    name: 'BrowserStack Test on Ubuntu'
    runs-on: ubuntu-latest  # Can be self-hosted runner also
    steps:

      - name: 'BrowserStack Env Setup'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.roshanchittoor_eu4FN9 }}
          access-key: ${{ secrets.R11Vpxwkye3iYPty1ZfT }}

      - name: 'BrowserStack Local Tunnel Setup'  # Invokes the setup-local action
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random

# The next 3 steps are for building the web application to be tested and starting the web server on the runner environment

      - name: 'Checkout the repository'
        uses: actions/checkout@v2

      - name: 'Building web application to be tested'
        run: npm install

      - name: 'Running application under test'
        run: ./node_modules/.bin/http-server -p 8099 &

      - name: 'Running test on BrowserStack'  # Invokes the actual test script that would run on BrowserStack browsers
        run: node index.js  # See sample test script above

      - name: 'BrowserStackLocal Stop'  # Terminating the BrowserStackLocal tunnel connection
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: stop


from selenium import webdriver
from selenium.webdriver.common.keys import keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

userName = os.environ['roshanchittoor_eu4FN9']
accessKey = os.environ['R11Vpxwkye3iYPty1ZfT']
localIdentifier = os.environ['BROWSERSTACK_LOCAL_IDENTIFIER']
buildName = os.environ['BROWSERSTACK_BUILD_NAME']
projectName = os.environ['BROWSERSTACK_PROJECT_NAME']

bstack_options = {
    "os" :"Windows",
    "osVersion" :"10",
    "buildName" :"BStack Build Name:" + buildName,
    "projectName" :"BStack Project Name:" + projectName,
    "localIdentifier":localIdentifier,
    "seleniumVersion" :"4.0.0",
    "userName":roshanchittoor_eu4FN9,
    "accessKey":R11Vpxwkye3iYPty1ZfT
}
options = ChromeOptions()
options.set_capability('bstack:options', bstack_options)
driver = webdriver.Remote(
    command_executor="https://hub.browserstack.com/wd/hub",
    options=options)
driver.get("http://localhost:8099") # HTTP Server should be running on 8099 port of GitHub runner
print(driver.title)
driver.quit()
